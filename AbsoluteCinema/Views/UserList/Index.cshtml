@model ABSOLUTE_CINEMA.AbsoluteCinema.ViewModels.UserListViewModel

@{
    ViewBag.Title = "Пользователи";
    Layout = "~/Views/Shared/_Layout.cshtml";
    // Для “разбана” вернём пользователя в роль RegisteredUser
    var defaultRoleId = Model.AllRoles
        .FirstOrDefault(r => r.Name == "RegisteredUser")?.Id;
}

<h2>@ViewBag.Title</h2>

<table class="table table-hover">
    <thead>
        <tr>
            <th>Имя</th>
            <th>Email</th>
            <th>Роль</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in Model.Users)
        {
            <tr>
                <td>@u.Name</td>
                <td>@u.Email</td>
                <td>@u.Role</td>
                <td>
                    @* — сменить роль *@
                    @using (Html.BeginForm("ChangeUserRole", "Admin", FormMethod.Post, new { @class = "d-inline" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("userId", u.Id)
                        <select name="roleId" class="form-control d-inline w-auto">
                            @foreach (var r in Model.AllRoles)
                            {
                                <option value="@r.Id" @(r.Name == u.Role ? "selected" : "")>
                                    @r.Name
                                </option>
                            }
                        </select>
                        <button type="submit" class="btn btn-sm btn-info ml-1">Изменить</button>
                    }

                    @* — бан / разбан *@
                    @if (u.Role != "Banned")
                    {
                        using (Html.BeginForm("BanUser", "Admin", FormMethod.Post, new { @class = "d-inline ml-1" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("userId", u.Id)
                            <button type="submit" class="btn btn-sm btn-danger">Забанить</button>
                        }
                    }
                    else if (defaultRoleId != null)
                    {
                        using (Html.BeginForm("ChangeUserRole", "Admin", FormMethod.Post, new { @class = "d-inline ml-1" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("userId", u.Id)
                            @Html.Hidden("roleId", defaultRoleId.Value)
                            <button type="submit" class="btn btn-sm btn-success">Разбанить</button>
                        }
                    }

                    @* — выдать подписку *@
                    @using (Html.BeginForm("GrantSubscription", "Admin", FormMethod.Post, new { @class = "d-inline ml-1" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("userId", u.Id)
                        <select name="subscriptionType" class="form-control d-inline w-auto">
                            @foreach (var type in Model.SubscriptionTypes)
                            {
                                var display = type == "Monthly" ? "Месячная" : "Годовая";
                                <option value="@type">@display</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-sm btn-success ml-1">Подписать</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
